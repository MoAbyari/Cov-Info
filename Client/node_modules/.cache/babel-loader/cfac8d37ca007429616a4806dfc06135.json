{"remainingRequest":"/Users/m67abyari/cov-info/node_modules/babel-loader/lib/index.js!/Users/m67abyari/cov-info/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/m67abyari/cov-info/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/m67abyari/cov-info/src/components/LeafletMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/m67abyari/cov-info/src/components/LeafletMap.vue","mtime":1631097195970},{"path":"/Users/m67abyari/cov-info/node_modules/cache-loader/dist/cjs.js","mtime":1630730682042},{"path":"/Users/m67abyari/cov-info/node_modules/babel-loader/lib/index.js","mtime":1630730686592},{"path":"/Users/m67abyari/cov-info/node_modules/cache-loader/dist/cjs.js","mtime":1630730682042},{"path":"/Users/m67abyari/cov-info/node_modules/vue-loader/lib/index.js","mtime":1630730687738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tNjdhYnlhcmkvY292LWluZm8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAibGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzIjsKaW1wb3J0IHsgYXBpIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJzsKaW1wb3J0IEwgZnJvbSAibGVhZmxldCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWFwIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgTlNXR2VvSnNvbjogW10sCiAgICAgIGRhaWx5Q2FzZXNJblN0YXRlOiBbXSwKICAgICAgY2VudGVyOiBbLTMzLjg1NTUsIDE1MS4xMTU1XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0eWxlTWFwOiBmdW5jdGlvbiBzdHlsZU1hcChmZWF0dXJlcykgewogICAgICB2YXIgbGdhQ29kZSA9IGZlYXR1cmVzLnByb3BlcnRpZXMuTEdBX0NPREUxOTsgLy8gY29uc29sZS5sb2coIj4+Pj4+Pj4+Pj5wb3N0ZWNvZGUiLCBwb3N0Q29kZSk7CgogICAgICB2YXIgY29sb3IgPSBsZ2FDb2RlID09PSAiMTQ5NTAiID8gInJlZCIgOiAiYmx1ZSI7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29sb3I6IHJlZAogICAgICB9OwogICAgfSwKICAgIG9uRWFjaEZlYXR1cmU6IGZ1bmN0aW9uIG9uRWFjaEZlYXR1cmUoZmVhdHVyZSwgbGF5ZXIpIHsKICAgICAgLy8gICAgIGxldCByZXN1bHQgPQogICAgICAvLyAgICAgdGhpcy5kYWlseUNhc2VzSW5TdGF0ZS5maWx0ZXIoZnVuY3Rpb24gKG9iamVjdDEpIHsKICAgICAgLy8gICAgIHJldHVybiB0aGlzLk5TV0dlb0pzb24uZmVhdHVyZXMucHJvcGVydGllcy5zb21lKGZ1bmN0aW9uIChvYmplY3QyKSB7CiAgICAgIC8vICAgICAgICAgaWYgKG9iamVjdDEubGdhX2NvZGUgPT09IG9iamVjdDIuTEdBX0NPREUxOSl7CiAgICAgIC8vICAgICAgICAgICAgIHJldHVybiBvYmplY3QxLnRvdGFsX2Nhc2VzOyAKICAgICAgLy8gICAgICAgICB9IAogICAgICAvLyAgICAgfSk7CiAgICAgIC8vIH0pOwogICAgICBpZiAoZmVhdHVyZS5wcm9wZXJ0aWVzICYmIGZlYXR1cmUucHJvcGVydGllcy5MR0FfTkFNRTE5KSB7CiAgICAgICAgbGF5ZXIuYmluZFBvcHVwKGZlYXR1cmUucHJvcGVydGllcy5MR0FfTkFNRTE5ICsgZmVhdHVyZS5wcm9wZXJ0aWVzLkxHQV9DT0RFMTkpOwogICAgICAgIGxheWVyLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBsYXllci5vcGVuUG9wdXAoKTsKICAgICAgICB9KTsKICAgICAgICBsYXllci5vbignbW91c2VvdXQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBsYXllci5jbG9zZVBvcHVwKCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzZXR1cExlYWZsZXRNYXA6IGZ1bmN0aW9uIHNldHVwTGVhZmxldE1hcCgpIHsKICAgICAgdmFyIG1hcERpdiA9IEwubWFwKCJtYXBDb250YWluZXIiKS5zZXRWaWV3KHRoaXMuY2VudGVyLCA3KTsKICAgICAgTC50aWxlTGF5ZXIoImh0dHBzOi8vYXBpLm1hcGJveC5jb20vc3R5bGVzL3YxL21vYWJ5YXJpL2NrdDlzYzduMjY4OXIxOHBnYXN3cm40bmwvdGlsZXMve3p9L3t4fS97eX0/YWNjZXNzX3Rva2VuPXthY2Nlc3NUb2tlbn0iLCB7CiAgICAgICAgYXR0cmlidXRpb246ICdNYXAgZGF0YSAoYykgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvIj5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMsIDxhIGhyZWY9Imh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8yLjAvIj5DQy1CWS1TQTwvYT4sIEltYWdlcnkgKGMpIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1hcGJveC5jb20vIj5NYXBib3g8L2E+JywKICAgICAgICBtYXhab29tOiAxNiwKICAgICAgICBpZDogIm1hcGJveC9zdHJlZXRzLXYxMSIsCiAgICAgICAgYWNjZXNzVG9rZW46ICJway5leUoxSWpvaWJXOWhZbmxoY21raUxDSmhJam9pWTJ0ME0zazNjbmd6TUdObGNESnZiekppWmpCeU5IcHlkeUo5LlVzeExLXzR1NkVpM05lXzBnTVVkcnciCiAgICAgIH0pLmFkZFRvKG1hcERpdik7CiAgICAgIEwuZ2VvSnNvbih0aGlzLk5TV0dlb0pzb24sIHsKICAgICAgICBvbkVhY2hGZWF0dXJlOiB0aGlzLm9uRWFjaEZlYXR1cmUsCiAgICAgICAgc3R5bGU6IHRoaXMuc3R5bGVNYXAKICAgICAgfSkuYWRkVG8obWFwRGl2KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldE5TV0dlb0pzb24oKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy5OU1dHZW9Kc29uID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldENhc2VzSW5TdGF0ZSgpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIF90aGlzLmRhaWx5Q2FzZXNJblN0YXRlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgX3RoaXMuc2V0dXBMZWFmbGV0TWFwKCk7CgogICAgICAgICAgICAgIF90aGlzLnN0eWxlTWFwKCk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["LeafletMap.vue"],"names":[],"mappings":";;;;;;;;;AAOA,OAAA,0BAAA;AACA,SAAA,GAAA,QAAA,oBAAA;AACA,OAAA,CAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,iBAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,QADA,EACA;AACA,UAAA,OAAA,GAAA,QAAA,CAAA,UAAA,CAAA,UAAA,CADA,CAEA;;AACA,UAAA,KAAA,GAAA,OAAA,KAAA,OAAA,GAAA,KAAA,GAAA,MAAA;AACA,aAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,KANA;AAQA,IAAA,aARA,yBAQA,OARA,EAQA,KARA,EAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAA,OAAA,CAAA,UAAA,IAAA,OAAA,CAAA,UAAA,CAAA,UAAA,EAAA;AAEA,QAAA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,CAAA,UAAA;AACA,QAAA,KAAA,CAAA,EAAA,CAAA,WAAA,EAAA,YAAA;AAAA,UAAA,KAAA,CAAA,SAAA;AAAA,SAAA;AACA,QAAA,KAAA,CAAA,EAAA,CAAA,UAAA,EAAA,YAAA;AAAA,UAAA,KAAA,CAAA,UAAA;AAAA,SAAA;AACA;AACA,KAxBA;AAyBA,IAAA,eAAA,EAAA,2BAAA;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,GAAA,CAAA,cAAA,EAAA,OAAA,CAAA,KAAA,MAAA,EAAA,CAAA,CAAA;AACA,MAAA,CAAA,CAAA,SAAA,CACA,kHADA,EAEA;AACA,QAAA,WAAA,EACA,wNAFA;AAGA,QAAA,OAAA,EAAA,EAHA;AAIA,QAAA,EAAA,EAAA,oBAJA;AAKA,QAAA,WAAA,EAAA;AALA,OAFA,EAQA,KARA,CAQA,MARA;AAUA,MAAA,CAAA,CAAA,OAAA,CAAA,KAAA,UAAA,EAAA;AAAA,QAAA,aAAA,EAAA,KAAA,aAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,OAAA,EAAA,KAAA,CAAA,MAAA;AACA;AAtCA,GATA;AAiDA,EAAA,OAjDA,qBAiDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,GAAA,CAAA,aAAA,EADA;;AAAA;AACA,cAAA,KAAA,CAAA,UADA;AAAA;AAAA,qBAEA,GAAA,CAAA,eAAA,EAFA;;AAAA;AAEA,cAAA,KAAA,CAAA,iBAFA;;AAGA,cAAA,KAAA,CAAA,eAAA;;AACA,cAAA,KAAA,CAAA,QAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAtDA,CAAA","sourcesContent":["<template>\n <div id=\"container\">\n   <div id=\"mapContainer\"></div>\n </div>\n</template>\n\n<script>\nimport \"leaflet/dist/leaflet.css\";\nimport { api } from '../helpers/helpers';\nimport L from \"leaflet\";\n\nexport default {\n    name: \"Map\",\n    data() {\n        return{\n            NSWGeoJson: [],\n            dailyCasesInState: [],\n            center: [-33.8555, \t151.1155],\n        }\n    },\n    methods: {\n        styleMap(features){\n            const lgaCode = features.properties.LGA_CODE19;\n            // console.log(\">>>>>>>>>>postecode\", postCode);\n            const color = lgaCode === \"14950\" ? \"red\" : \"blue\";\n            return { color: red };\n        },\n\n        onEachFeature(feature, layer) {\n        //     let result =\n        //     this.dailyCasesInState.filter(function (object1) {\n        //     return this.NSWGeoJson.features.properties.some(function (object2) {\n        //         if (object1.lga_code === object2.LGA_CODE19){\n        //             return object1.total_cases; \n        //         } \n        //     });\n        // });\n           \n            if (feature.properties && feature.properties.LGA_NAME19) {\n\n                layer.bindPopup(feature.properties.LGA_NAME19 + feature.properties.LGA_CODE19);\n                layer.on('mouseover', () => { layer.openPopup(); });\n                layer.on('mouseout', () => { layer.closePopup(); });\n            }\n        },\n        setupLeafletMap: function () {\n            const mapDiv = L.map(\"mapContainer\").setView(this.center, 7);\n            L.tileLayer(\n                \"https://api.mapbox.com/styles/v1/moabyari/ckt9sc7n2689r18pgaswrn4nl/tiles/{z}/{x}/{y}?access_token={accessToken}\",\n                {\n                    attribution:\n                    'Map data (c) <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery (c) <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n                    maxZoom: 16,\n                    id: \"mapbox/streets-v11\",\n                    accessToken: \"pk.eyJ1IjoibW9hYnlhcmkiLCJhIjoiY2t0M3k3cngzMGNlcDJvbzJiZjByNHpydyJ9.UsxLK_4u6Ei3Ne_0gMUdrw\",\n                }).addTo(mapDiv);\n\n            L.geoJson(this.NSWGeoJson, {onEachFeature: this.onEachFeature, style: this.styleMap}).addTo(mapDiv);\n        },\n    },\n    async mounted() {\n        this.NSWGeoJson = await api.getNSWGeoJson();\n        this.dailyCasesInState = await api.getCasesInState();\n        this.setupLeafletMap();\n        this.styleMap();\n    }\n};\n</script>\n\n<style scoped>\n    #mapContainer {\n        width: 700px;\n        height: 90vh;\n        margin: 0 auto;\n    }\n</style>"],"sourceRoot":"src/components"}]}