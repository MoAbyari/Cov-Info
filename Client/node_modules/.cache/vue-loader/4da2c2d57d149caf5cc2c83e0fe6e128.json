{"remainingRequest":"/Users/m67abyari/cov-info/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/m67abyari/cov-info/src/components/LeafletMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/m67abyari/cov-info/src/components/LeafletMap.vue","mtime":1631097195970},{"path":"/Users/m67abyari/cov-info/node_modules/cache-loader/dist/cjs.js","mtime":1630730682042},{"path":"/Users/m67abyari/cov-info/node_modules/babel-loader/lib/index.js","mtime":1630730686592},{"path":"/Users/m67abyari/cov-info/node_modules/cache-loader/dist/cjs.js","mtime":1630730682042},{"path":"/Users/m67abyari/cov-info/node_modules/vue-loader/lib/index.js","mtime":1630730687738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAibGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzIjsKaW1wb3J0IHsgYXBpIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJzsKaW1wb3J0IEwgZnJvbSAibGVhZmxldCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiTWFwIiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICBOU1dHZW9Kc29uOiBbXSwKICAgICAgICAgICAgZGFpbHlDYXNlc0luU3RhdGU6IFtdLAogICAgICAgICAgICBjZW50ZXI6IFstMzMuODU1NSwgCTE1MS4xMTU1XSwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHN0eWxlTWFwKGZlYXR1cmVzKXsKICAgICAgICAgICAgY29uc3QgbGdhQ29kZSA9IGZlYXR1cmVzLnByb3BlcnRpZXMuTEdBX0NPREUxOTsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coIj4+Pj4+Pj4+Pj5wb3N0ZWNvZGUiLCBwb3N0Q29kZSk7CiAgICAgICAgICAgIGNvbnN0IGNvbG9yID0gbGdhQ29kZSA9PT0gIjE0OTUwIiA/ICJyZWQiIDogImJsdWUiOwogICAgICAgICAgICByZXR1cm4geyBjb2xvcjogcmVkIH07CiAgICAgICAgfSwKCiAgICAgICAgb25FYWNoRmVhdHVyZShmZWF0dXJlLCBsYXllcikgewogICAgICAgIC8vICAgICBsZXQgcmVzdWx0ID0KICAgICAgICAvLyAgICAgdGhpcy5kYWlseUNhc2VzSW5TdGF0ZS5maWx0ZXIoZnVuY3Rpb24gKG9iamVjdDEpIHsKICAgICAgICAvLyAgICAgcmV0dXJuIHRoaXMuTlNXR2VvSnNvbi5mZWF0dXJlcy5wcm9wZXJ0aWVzLnNvbWUoZnVuY3Rpb24gKG9iamVjdDIpIHsKICAgICAgICAvLyAgICAgICAgIGlmIChvYmplY3QxLmxnYV9jb2RlID09PSBvYmplY3QyLkxHQV9DT0RFMTkpewogICAgICAgIC8vICAgICAgICAgICAgIHJldHVybiBvYmplY3QxLnRvdGFsX2Nhc2VzOyAKICAgICAgICAvLyAgICAgICAgIH0gCiAgICAgICAgLy8gICAgIH0pOwogICAgICAgIC8vIH0pOwogICAgICAgICAgIAogICAgICAgICAgICBpZiAoZmVhdHVyZS5wcm9wZXJ0aWVzICYmIGZlYXR1cmUucHJvcGVydGllcy5MR0FfTkFNRTE5KSB7CgogICAgICAgICAgICAgICAgbGF5ZXIuYmluZFBvcHVwKGZlYXR1cmUucHJvcGVydGllcy5MR0FfTkFNRTE5ICsgZmVhdHVyZS5wcm9wZXJ0aWVzLkxHQV9DT0RFMTkpOwogICAgICAgICAgICAgICAgbGF5ZXIub24oJ21vdXNlb3ZlcicsICgpID0+IHsgbGF5ZXIub3BlblBvcHVwKCk7IH0pOwogICAgICAgICAgICAgICAgbGF5ZXIub24oJ21vdXNlb3V0JywgKCkgPT4geyBsYXllci5jbG9zZVBvcHVwKCk7IH0pOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXR1cExlYWZsZXRNYXA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgY29uc3QgbWFwRGl2ID0gTC5tYXAoIm1hcENvbnRhaW5lciIpLnNldFZpZXcodGhpcy5jZW50ZXIsIDcpOwogICAgICAgICAgICBMLnRpbGVMYXllcigKICAgICAgICAgICAgICAgICJodHRwczovL2FwaS5tYXBib3guY29tL3N0eWxlcy92MS9tb2FieWFyaS9ja3Q5c2M3bjI2ODlyMThwZ2Fzd3JuNG5sL3RpbGVzL3t6fS97eH0ve3l9P2FjY2Vzc190b2tlbj17YWNjZXNzVG9rZW59IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGlvbjoKICAgICAgICAgICAgICAgICAgICAnTWFwIGRhdGEgKGMpIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnLyI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzLCA8YSBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wLyI+Q0MtQlktU0E8L2E+LCBJbWFnZXJ5IChjKSA8YSBocmVmPSJodHRwczovL3d3dy5tYXBib3guY29tLyI+TWFwYm94PC9hPicsCiAgICAgICAgICAgICAgICAgICAgbWF4Wm9vbTogMTYsCiAgICAgICAgICAgICAgICAgICAgaWQ6ICJtYXBib3gvc3RyZWV0cy12MTEiLAogICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuOiAicGsuZXlKMUlqb2liVzloWW5saGNta2lMQ0poSWpvaVkydDBNM2szY25nek1HTmxjREp2YnpKaVpqQnlOSHB5ZHlKOS5Vc3hMS180dTZFaTNOZV8wZ01VZHJ3IiwKICAgICAgICAgICAgICAgIH0pLmFkZFRvKG1hcERpdik7CgogICAgICAgICAgICBMLmdlb0pzb24odGhpcy5OU1dHZW9Kc29uLCB7b25FYWNoRmVhdHVyZTogdGhpcy5vbkVhY2hGZWF0dXJlLCBzdHlsZTogdGhpcy5zdHlsZU1hcH0pLmFkZFRvKG1hcERpdik7CiAgICAgICAgfSwKICAgIH0sCiAgICBhc3luYyBtb3VudGVkKCkgewogICAgICAgIHRoaXMuTlNXR2VvSnNvbiA9IGF3YWl0IGFwaS5nZXROU1dHZW9Kc29uKCk7CiAgICAgICAgdGhpcy5kYWlseUNhc2VzSW5TdGF0ZSA9IGF3YWl0IGFwaS5nZXRDYXNlc0luU3RhdGUoKTsKICAgICAgICB0aGlzLnNldHVwTGVhZmxldE1hcCgpOwogICAgICAgIHRoaXMuc3R5bGVNYXAoKTsKICAgIH0KfTsK"},{"version":3,"sources":["LeafletMap.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeafletMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n <div id=\"container\">\n   <div id=\"mapContainer\"></div>\n </div>\n</template>\n\n<script>\nimport \"leaflet/dist/leaflet.css\";\nimport { api } from '../helpers/helpers';\nimport L from \"leaflet\";\n\nexport default {\n    name: \"Map\",\n    data() {\n        return{\n            NSWGeoJson: [],\n            dailyCasesInState: [],\n            center: [-33.8555, \t151.1155],\n        }\n    },\n    methods: {\n        styleMap(features){\n            const lgaCode = features.properties.LGA_CODE19;\n            // console.log(\">>>>>>>>>>postecode\", postCode);\n            const color = lgaCode === \"14950\" ? \"red\" : \"blue\";\n            return { color: red };\n        },\n\n        onEachFeature(feature, layer) {\n        //     let result =\n        //     this.dailyCasesInState.filter(function (object1) {\n        //     return this.NSWGeoJson.features.properties.some(function (object2) {\n        //         if (object1.lga_code === object2.LGA_CODE19){\n        //             return object1.total_cases; \n        //         } \n        //     });\n        // });\n           \n            if (feature.properties && feature.properties.LGA_NAME19) {\n\n                layer.bindPopup(feature.properties.LGA_NAME19 + feature.properties.LGA_CODE19);\n                layer.on('mouseover', () => { layer.openPopup(); });\n                layer.on('mouseout', () => { layer.closePopup(); });\n            }\n        },\n        setupLeafletMap: function () {\n            const mapDiv = L.map(\"mapContainer\").setView(this.center, 7);\n            L.tileLayer(\n                \"https://api.mapbox.com/styles/v1/moabyari/ckt9sc7n2689r18pgaswrn4nl/tiles/{z}/{x}/{y}?access_token={accessToken}\",\n                {\n                    attribution:\n                    'Map data (c) <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery (c) <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n                    maxZoom: 16,\n                    id: \"mapbox/streets-v11\",\n                    accessToken: \"pk.eyJ1IjoibW9hYnlhcmkiLCJhIjoiY2t0M3k3cngzMGNlcDJvbzJiZjByNHpydyJ9.UsxLK_4u6Ei3Ne_0gMUdrw\",\n                }).addTo(mapDiv);\n\n            L.geoJson(this.NSWGeoJson, {onEachFeature: this.onEachFeature, style: this.styleMap}).addTo(mapDiv);\n        },\n    },\n    async mounted() {\n        this.NSWGeoJson = await api.getNSWGeoJson();\n        this.dailyCasesInState = await api.getCasesInState();\n        this.setupLeafletMap();\n        this.styleMap();\n    }\n};\n</script>\n\n<style scoped>\n    #mapContainer {\n        width: 700px;\n        height: 90vh;\n        margin: 0 auto;\n    }\n</style>"]}]}